{"ast":null,"code":"var _jsxFileName = \"/Users/baidikmazumdar/Documents/tic-tac-toe/client/src/components/TicTacToeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { gameAPI } from '../services/api';\nimport { checkWinner, isBoardFull, getAIMove, createEmptyBoard, countMoves, getGameResult } from '../utils/gameLogic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicTacToeGame = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [board, setBoard] = useState(createEmptyBoard());\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [gameStatus, setGameStatus] = useState('playing'); // 'playing', 'won', 'draw'\n  const [winner, setWinner] = useState(null);\n  const [winningCombination, setWinningCombination] = useState([]);\n  const [gameStartTime, setGameStartTime] = useState(Date.now());\n  const [difficulty, setDifficulty] = useState('medium');\n  const [gameMode, setGameMode] = useState('ai'); // 'ai' or 'human'\n  const [saving, setSaving] = useState(false);\n\n  // Reset game function\n  const resetGame = useCallback(() => {\n    setBoard(createEmptyBoard());\n    setCurrentPlayer('X');\n    setGameStatus('playing');\n    setWinner(null);\n    setWinningCombination([]);\n    setGameStartTime(Date.now());\n  }, []);\n\n  // Save game result to backend\n  const saveGameResult = useCallback(async (gameBoard, moves, duration, result) => {\n    if (!user) return;\n    try {\n      setSaving(true);\n      await gameAPI.saveGame({\n        result,\n        opponent: gameMode === 'ai' ? `Computer (${difficulty})` : 'Human',\n        gameBoard,\n        moves,\n        duration: Math.floor(duration / 1000)\n      });\n    } catch (error) {\n      console.error('Failed to save game:', error);\n    } finally {\n      setSaving(false);\n    }\n  }, [user, gameMode, difficulty]);\n\n  // Handle cell click\n  const handleCellClick = useCallback(index => {\n    if (board[index] !== '' || gameStatus !== 'playing') return;\n    const newBoard = [...board];\n    newBoard[index] = currentPlayer;\n    setBoard(newBoard);\n\n    // Check for winner\n    const winResult = checkWinner(newBoard);\n    if (winResult) {\n      setGameStatus('won');\n      setWinner(winResult.winner);\n      setWinningCombination(winResult.winningCombination);\n      const duration = Date.now() - gameStartTime;\n      const moves = countMoves(newBoard);\n      const result = getGameResult(winResult.winner, 'X');\n      saveGameResult(newBoard, moves, duration, result);\n      return;\n    }\n\n    // Check for draw\n    if (isBoardFull(newBoard)) {\n      setGameStatus('draw');\n      const duration = Date.now() - gameStartTime;\n      const moves = countMoves(newBoard);\n      saveGameResult(newBoard, moves, duration, 'draw');\n      return;\n    }\n\n    // Switch player\n    setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n  }, [board, gameStatus, currentPlayer, gameStartTime, saveGameResult]);\n\n  // AI move effect\n  useEffect(() => {\n    if (gameMode === 'ai' && currentPlayer === 'O' && gameStatus === 'playing') {\n      const timeoutId = setTimeout(() => {\n        const aiMove = getAIMove(board, difficulty);\n        if (aiMove !== null) {\n          handleCellClick(aiMove);\n        }\n      }, 500); // Small delay for better UX\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [currentPlayer, gameStatus, gameMode, board, difficulty, handleCellClick]);\n\n  // Cell component\n  const Cell = ({\n    index,\n    value\n  }) => {\n    const isWinningCell = winningCombination.includes(index);\n    const cellClass = `game-cell ${value === 'X' ? 'x' : value === 'O' ? 'o' : ''} ${isWinningCell ? 'winning' : ''}`;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: cellClass,\n      onClick: () => handleCellClick(index),\n      disabled: gameStatus !== 'playing' || value !== '',\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Tic-Tac-Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: gameMode,\n          onChange: e => setGameMode(e.target.value),\n          disabled: gameStatus === 'playing' && countMoves(board) > 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ai\",\n            children: \"vs Computer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"human\",\n            children: \"vs Human\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), gameMode === 'ai' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: difficulty,\n          onChange: e => setDifficulty(e.target.value),\n          disabled: gameStatus === 'playing' && countMoves(board) > 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-status\",\n      children: [gameStatus === 'playing' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Player: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: currentPlayer === 'X' ? 'x' : 'o',\n          children: [currentPlayer, \" \", gameMode === 'ai' && currentPlayer === 'O' ? '(Computer)' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), gameStatus === 'won' && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#16a34a'\n        },\n        children: [\"\\uD83C\\uDF89 \", winner, \" wins! \", winner === 'X' ? 'You won!' : gameMode === 'ai' ? 'Computer wins!' : 'Player O wins!']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), gameStatus === 'draw' && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#a16207'\n        },\n        children: \"\\uD83E\\uDD1D It's a draw!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: board.map((cell, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        index: index,\n        value: cell\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"btn btn-primary\",\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), saving && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner spinner-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Saving game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToeGame, \"IARwOs9yVJy1MuGXvw5ZedTzUr0=\", false, function () {\n  return [useAuth];\n});\n_c = TicTacToeGame;\nexport default TicTacToeGame;\nvar _c;\n$RefreshReg$(_c, \"TicTacToeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","gameAPI","checkWinner","isBoardFull","getAIMove","createEmptyBoard","countMoves","getGameResult","jsxDEV","_jsxDEV","TicTacToeGame","_s","user","board","setBoard","currentPlayer","setCurrentPlayer","gameStatus","setGameStatus","winner","setWinner","winningCombination","setWinningCombination","gameStartTime","setGameStartTime","Date","now","difficulty","setDifficulty","gameMode","setGameMode","saving","setSaving","resetGame","saveGameResult","gameBoard","moves","duration","result","saveGame","opponent","Math","floor","error","console","handleCellClick","index","newBoard","winResult","timeoutId","setTimeout","aiMove","clearTimeout","Cell","value","isWinningCell","includes","cellClass","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","style","color","map","cell","marginTop","display","alignItems","justifyContent","gap","_c","$RefreshReg$"],"sources":["/Users/baidikmazumdar/Documents/tic-tac-toe/client/src/components/TicTacToeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { gameAPI } from '../services/api';\nimport { \n  checkWinner, \n  isBoardFull, \n  getAIMove, \n  createEmptyBoard, \n  countMoves, \n  getGameResult \n} from '../utils/gameLogic';\n\nconst TicTacToeGame = () => {\n  const { user } = useAuth();\n  const [board, setBoard] = useState(createEmptyBoard());\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [gameStatus, setGameStatus] = useState('playing'); // 'playing', 'won', 'draw'\n  const [winner, setWinner] = useState(null);\n  const [winningCombination, setWinningCombination] = useState([]);\n  const [gameStartTime, setGameStartTime] = useState(Date.now());\n  const [difficulty, setDifficulty] = useState('medium');\n  const [gameMode, setGameMode] = useState('ai'); // 'ai' or 'human'\n  const [saving, setSaving] = useState(false);\n\n  // Reset game function\n  const resetGame = useCallback(() => {\n    setBoard(createEmptyBoard());\n    setCurrentPlayer('X');\n    setGameStatus('playing');\n    setWinner(null);\n    setWinningCombination([]);\n    setGameStartTime(Date.now());\n  }, []);\n\n  // Save game result to backend\n  const saveGameResult = useCallback(async (gameBoard, moves, duration, result) => {\n    if (!user) return;\n\n    try {\n      setSaving(true);\n      await gameAPI.saveGame({\n        result,\n        opponent: gameMode === 'ai' ? `Computer (${difficulty})` : 'Human',\n        gameBoard,\n        moves,\n        duration: Math.floor(duration / 1000)\n      });\n    } catch (error) {\n      console.error('Failed to save game:', error);\n    } finally {\n      setSaving(false);\n    }\n  }, [user, gameMode, difficulty]);\n\n  // Handle cell click\n  const handleCellClick = useCallback((index) => {\n    if (board[index] !== '' || gameStatus !== 'playing') return;\n\n    const newBoard = [...board];\n    newBoard[index] = currentPlayer;\n    setBoard(newBoard);\n\n    // Check for winner\n    const winResult = checkWinner(newBoard);\n    if (winResult) {\n      setGameStatus('won');\n      setWinner(winResult.winner);\n      setWinningCombination(winResult.winningCombination);\n      \n      const duration = Date.now() - gameStartTime;\n      const moves = countMoves(newBoard);\n      const result = getGameResult(winResult.winner, 'X');\n      saveGameResult(newBoard, moves, duration, result);\n      return;\n    }\n\n    // Check for draw\n    if (isBoardFull(newBoard)) {\n      setGameStatus('draw');\n      const duration = Date.now() - gameStartTime;\n      const moves = countMoves(newBoard);\n      saveGameResult(newBoard, moves, duration, 'draw');\n      return;\n    }\n\n    // Switch player\n    setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n  }, [board, gameStatus, currentPlayer, gameStartTime, saveGameResult]);\n\n  // AI move effect\n  useEffect(() => {\n    if (gameMode === 'ai' && currentPlayer === 'O' && gameStatus === 'playing') {\n      const timeoutId = setTimeout(() => {\n        const aiMove = getAIMove(board, difficulty);\n        if (aiMove !== null) {\n          handleCellClick(aiMove);\n        }\n      }, 500); // Small delay for better UX\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [currentPlayer, gameStatus, gameMode, board, difficulty, handleCellClick]);\n\n  // Cell component\n  const Cell = ({ index, value }) => {\n    const isWinningCell = winningCombination.includes(index);\n    const cellClass = `game-cell ${value === 'X' ? 'x' : value === 'O' ? 'o' : ''} ${isWinningCell ? 'winning' : ''}`;\n    \n    return (\n      <button\n        className={cellClass}\n        onClick={() => handleCellClick(index)}\n        disabled={gameStatus !== 'playing' || value !== ''}\n      >\n        {value}\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"game-title\">Tic-Tac-Toe</h1>\n      \n      {/* Game Controls */}\n      <div className=\"game-controls\">\n        <div className=\"control-group\">\n          <label>Mode:</label>\n          <select\n            value={gameMode}\n            onChange={(e) => setGameMode(e.target.value)}\n            disabled={gameStatus === 'playing' && countMoves(board) > 0}\n          >\n            <option value=\"ai\">vs Computer</option>\n            <option value=\"human\">vs Human</option>\n          </select>\n        </div>\n        \n        {gameMode === 'ai' && (\n          <div className=\"control-group\">\n            <label>Difficulty:</label>\n            <select\n              value={difficulty}\n              onChange={(e) => setDifficulty(e.target.value)}\n              disabled={gameStatus === 'playing' && countMoves(board) > 0}\n            >\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n          </div>\n        )}\n      </div>\n\n      {/* Game Status */}\n      <div className=\"game-status\">\n        {gameStatus === 'playing' && (\n          <p>\n            Current Player: <strong className={currentPlayer === 'X' ? 'x' : 'o'}>\n              {currentPlayer} {gameMode === 'ai' && currentPlayer === 'O' ? '(Computer)' : ''}\n            </strong>\n          </p>\n        )}\n        {gameStatus === 'won' && (\n          <p style={{color: '#16a34a'}}>\n            🎉 {winner} wins! {winner === 'X' ? 'You won!' : (gameMode === 'ai' ? 'Computer wins!' : 'Player O wins!')}\n          </p>\n        )}\n        {gameStatus === 'draw' && (\n          <p style={{color: '#a16207'}}>\n            🤝 It's a draw!\n          </p>\n        )}\n      </div>\n\n      {/* Game Board */}\n      <div className=\"game-board\">\n        {board.map((cell, index) => (\n          <Cell key={index} index={index} value={cell} />\n        ))}\n      </div>\n\n      {/* Game Actions */}\n      <div className=\"game-actions\">\n        <button onClick={resetGame} className=\"btn btn-primary\">\n          New Game\n        </button>\n        \n        {saving && (\n          <div style={{marginTop: '1rem', display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '0.5rem'}}>\n            <div className=\"spinner spinner-sm\"></div>\n            <span>Saving game...</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TicTacToeGame; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SACEC,WAAW,EACXC,WAAW,EACXC,SAAS,EACTC,gBAAgB,EAChBC,UAAU,EACVC,aAAa,QACR,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAK,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAACQ,gBAAgB,CAAC,CAAC,CAAC;EACtD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,GAAG,CAAC;EACvD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACzD,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACwB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC4B,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,QAAQ,CAAC;EACtD,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACkC,MAAM,EAAEC,SAAS,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMoC,SAAS,GAAGlC,WAAW,CAAC,MAAM;IAClCe,QAAQ,CAACT,gBAAgB,CAAC,CAAC,CAAC;IAC5BW,gBAAgB,CAAC,GAAG,CAAC;IACrBE,aAAa,CAAC,SAAS,CAAC;IACxBE,SAAS,CAAC,IAAI,CAAC;IACfE,qBAAqB,CAAC,EAAE,CAAC;IACzBE,gBAAgB,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,cAAc,GAAGnC,WAAW,CAAC,OAAOoC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,KAAK;IAC/E,IAAI,CAAC1B,IAAI,EAAE;IAEX,IAAI;MACFoB,SAAS,CAAC,IAAI,CAAC;MACf,MAAM/B,OAAO,CAACsC,QAAQ,CAAC;QACrBD,MAAM;QACNE,QAAQ,EAAEX,QAAQ,KAAK,IAAI,GAAG,aAAaF,UAAU,GAAG,GAAG,OAAO;QAClEQ,SAAS;QACTC,KAAK;QACLC,QAAQ,EAAEI,IAAI,CAACC,KAAK,CAACL,QAAQ,GAAG,IAAI;MACtC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRX,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC,EAAE,CAACpB,IAAI,EAAEiB,QAAQ,EAAEF,UAAU,CAAC,CAAC;;EAEhC;EACA,MAAMkB,eAAe,GAAG9C,WAAW,CAAE+C,KAAK,IAAK;IAC7C,IAAIjC,KAAK,CAACiC,KAAK,CAAC,KAAK,EAAE,IAAI7B,UAAU,KAAK,SAAS,EAAE;IAErD,MAAM8B,QAAQ,GAAG,CAAC,GAAGlC,KAAK,CAAC;IAC3BkC,QAAQ,CAACD,KAAK,CAAC,GAAG/B,aAAa;IAC/BD,QAAQ,CAACiC,QAAQ,CAAC;;IAElB;IACA,MAAMC,SAAS,GAAG9C,WAAW,CAAC6C,QAAQ,CAAC;IACvC,IAAIC,SAAS,EAAE;MACb9B,aAAa,CAAC,KAAK,CAAC;MACpBE,SAAS,CAAC4B,SAAS,CAAC7B,MAAM,CAAC;MAC3BG,qBAAqB,CAAC0B,SAAS,CAAC3B,kBAAkB,CAAC;MAEnD,MAAMgB,QAAQ,GAAGZ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,aAAa;MAC3C,MAAMa,KAAK,GAAG9B,UAAU,CAACyC,QAAQ,CAAC;MAClC,MAAMT,MAAM,GAAG/B,aAAa,CAACyC,SAAS,CAAC7B,MAAM,EAAE,GAAG,CAAC;MACnDe,cAAc,CAACa,QAAQ,EAAEX,KAAK,EAAEC,QAAQ,EAAEC,MAAM,CAAC;MACjD;IACF;;IAEA;IACA,IAAInC,WAAW,CAAC4C,QAAQ,CAAC,EAAE;MACzB7B,aAAa,CAAC,MAAM,CAAC;MACrB,MAAMmB,QAAQ,GAAGZ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,aAAa;MAC3C,MAAMa,KAAK,GAAG9B,UAAU,CAACyC,QAAQ,CAAC;MAClCb,cAAc,CAACa,QAAQ,EAAEX,KAAK,EAAEC,QAAQ,EAAE,MAAM,CAAC;MACjD;IACF;;IAEA;IACArB,gBAAgB,CAACD,aAAa,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EACrD,CAAC,EAAE,CAACF,KAAK,EAAEI,UAAU,EAAEF,aAAa,EAAEQ,aAAa,EAAEW,cAAc,CAAC,CAAC;;EAErE;EACApC,SAAS,CAAC,MAAM;IACd,IAAI+B,QAAQ,KAAK,IAAI,IAAId,aAAa,KAAK,GAAG,IAAIE,UAAU,KAAK,SAAS,EAAE;MAC1E,MAAMgC,SAAS,GAAGC,UAAU,CAAC,MAAM;QACjC,MAAMC,MAAM,GAAG/C,SAAS,CAACS,KAAK,EAAEc,UAAU,CAAC;QAC3C,IAAIwB,MAAM,KAAK,IAAI,EAAE;UACnBN,eAAe,CAACM,MAAM,CAAC;QACzB;MACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;MAET,OAAO,MAAMC,YAAY,CAACH,SAAS,CAAC;IACtC;EACF,CAAC,EAAE,CAAClC,aAAa,EAAEE,UAAU,EAAEY,QAAQ,EAAEhB,KAAK,EAAEc,UAAU,EAAEkB,eAAe,CAAC,CAAC;;EAE7E;EACA,MAAMQ,IAAI,GAAGA,CAAC;IAAEP,KAAK;IAAEQ;EAAM,CAAC,KAAK;IACjC,MAAMC,aAAa,GAAGlC,kBAAkB,CAACmC,QAAQ,CAACV,KAAK,CAAC;IACxD,MAAMW,SAAS,GAAG,aAAaH,KAAK,KAAK,GAAG,GAAG,GAAG,GAAGA,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,EAAE,IAAIC,aAAa,GAAG,SAAS,GAAG,EAAE,EAAE;IAEjH,oBACE9C,OAAA;MACEiD,SAAS,EAAED,SAAU;MACrBE,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACC,KAAK,CAAE;MACtCc,QAAQ,EAAE3C,UAAU,KAAK,SAAS,IAAIqC,KAAK,KAAK,EAAG;MAAAO,QAAA,EAElDP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEb,CAAC;EAED,oBACExD,OAAA;IAAKiD,SAAS,EAAC,gBAAgB;IAAAG,QAAA,gBAC7BpD,OAAA;MAAIiD,SAAS,EAAC,YAAY;MAAAG,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG3CxD,OAAA;MAAKiD,SAAS,EAAC,eAAe;MAAAG,QAAA,gBAC5BpD,OAAA;QAAKiD,SAAS,EAAC,eAAe;QAAAG,QAAA,gBAC5BpD,OAAA;UAAAoD,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBxD,OAAA;UACE6C,KAAK,EAAEzB,QAAS;UAChBqC,QAAQ,EAAGC,CAAC,IAAKrC,WAAW,CAACqC,CAAC,CAACC,MAAM,CAACd,KAAK,CAAE;UAC7CM,QAAQ,EAAE3C,UAAU,KAAK,SAAS,IAAIX,UAAU,CAACO,KAAK,CAAC,GAAG,CAAE;UAAAgD,QAAA,gBAE5DpD,OAAA;YAAQ6C,KAAK,EAAC,IAAI;YAAAO,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvCxD,OAAA;YAAQ6C,KAAK,EAAC,OAAO;YAAAO,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELpC,QAAQ,KAAK,IAAI,iBAChBpB,OAAA;QAAKiD,SAAS,EAAC,eAAe;QAAAG,QAAA,gBAC5BpD,OAAA;UAAAoD,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BxD,OAAA;UACE6C,KAAK,EAAE3B,UAAW;UAClBuC,QAAQ,EAAGC,CAAC,IAAKvC,aAAa,CAACuC,CAAC,CAACC,MAAM,CAACd,KAAK,CAAE;UAC/CM,QAAQ,EAAE3C,UAAU,KAAK,SAAS,IAAIX,UAAU,CAACO,KAAK,CAAC,GAAG,CAAE;UAAAgD,QAAA,gBAE5DpD,OAAA;YAAQ6C,KAAK,EAAC,MAAM;YAAAO,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClCxD,OAAA;YAAQ6C,KAAK,EAAC,QAAQ;YAAAO,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCxD,OAAA;YAAQ6C,KAAK,EAAC,MAAM;YAAAO,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNxD,OAAA;MAAKiD,SAAS,EAAC,aAAa;MAAAG,QAAA,GACzB5C,UAAU,KAAK,SAAS,iBACvBR,OAAA;QAAAoD,QAAA,GAAG,kBACe,eAAApD,OAAA;UAAQiD,SAAS,EAAE3C,aAAa,KAAK,GAAG,GAAG,GAAG,GAAG,GAAI;UAAA8C,QAAA,GAClE9C,aAAa,EAAC,GAAC,EAACc,QAAQ,KAAK,IAAI,IAAId,aAAa,KAAK,GAAG,GAAG,YAAY,GAAG,EAAE;QAAA;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACJ,EACAhD,UAAU,KAAK,KAAK,iBACnBR,OAAA;QAAG4D,KAAK,EAAE;UAACC,KAAK,EAAE;QAAS,CAAE;QAAAT,QAAA,GAAC,eACzB,EAAC1C,MAAM,EAAC,SAAO,EAACA,MAAM,KAAK,GAAG,GAAG,UAAU,GAAIU,QAAQ,KAAK,IAAI,GAAG,gBAAgB,GAAG,gBAAiB;MAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzG,CACJ,EACAhD,UAAU,KAAK,MAAM,iBACpBR,OAAA;QAAG4D,KAAK,EAAE;UAACC,KAAK,EAAE;QAAS,CAAE;QAAAT,QAAA,EAAC;MAE9B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNxD,OAAA;MAAKiD,SAAS,EAAC,YAAY;MAAAG,QAAA,EACxBhD,KAAK,CAAC0D,GAAG,CAAC,CAACC,IAAI,EAAE1B,KAAK,kBACrBrC,OAAA,CAAC4C,IAAI;QAAaP,KAAK,EAAEA,KAAM;QAACQ,KAAK,EAAEkB;MAAK,GAAjC1B,KAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8B,CAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNxD,OAAA;MAAKiD,SAAS,EAAC,cAAc;MAAAG,QAAA,gBAC3BpD,OAAA;QAAQkD,OAAO,EAAE1B,SAAU;QAACyB,SAAS,EAAC,iBAAiB;QAAAG,QAAA,EAAC;MAExD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERlC,MAAM,iBACLtB,OAAA;QAAK4D,KAAK,EAAE;UAACI,SAAS,EAAE,MAAM;UAAEC,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAAQ,CAAE;QAAAhB,QAAA,gBAC9GpD,OAAA;UAAKiD,SAAS,EAAC;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1CxD,OAAA;UAAAoD,QAAA,EAAM;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtD,EAAA,CAxLID,aAAa;EAAA,QACAV,OAAO;AAAA;AAAA8E,EAAA,GADpBpE,aAAa;AA0LnB,eAAeA,aAAa;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}